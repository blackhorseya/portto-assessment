// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package restful

import (
	"portto/pkg/contextx"
	"portto/pkg/httpx"
	"portto/internal/handler"
	"portto/internal/repository"
	"portto/internal/shared/configx"
	"portto/internal/shared/pgx"
)

// Injectors from wire.go:

func NewServer(ctx contextx.Contextx, appConfig *configx.Application) (*Server, func(), error) {
	ginServer := newGinServer(ctx, appConfig)
	db, cleanup, err := pgx.NewClient(appConfig)
	if err != nil {
		return nil, nil, err
	}
	coinRepository, err := repository.NewCoinRepository(db)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	initRouterFn := handler.RegisterRoutes(coinRepository)
	server := &Server{
		appConfig:  appConfig,
		ginServer:  ginServer,
		initRouter: initRouterFn,
	}
	return server, func() {
		cleanup()
	}, nil
}

// wire.go:

func newGinServer(ctx contextx.Contextx, appConfig *configx.Application) *httpx.GinServer {
	return httpx.NewGinServer(ctx.Logger, appConfig.Verbose)
}
